# NOTE: Generated By HttpRunner v4.3.0
# FROM: testcases\test_outPlan\create_wave_test.yaml
from httprunner import HttpRunner, Config, Step, RunRequest,RunSqlRequest
from httprunner import RunTestCase

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent))

from testcases.test_outPlan.allocate_ById_test_test import (
    TestCaseAllocateByidTest as allocateTest,
)


class TestCaseCreateWaveTest(HttpRunner):

    config = (Config("创建波次").export(*["waveId","id","skuQty", "picked_qty"])
              .db()
              .user('asura')
              .password("asura")
              .ip("test.mysql8.ruigushop.com")
              .port(3306)
              .database("asura_wms_005"))

    teststeps = [
        Step(RunTestCase("查询波次ID").call(allocateTest).export(*["order_id","id","skuQty", "picked_qty"])),
        Step(
            RunRequest("开始创建波次")
                .post(
                "http://test.asura-wms.ruigushop.com/api/asura/wms/web/out/wave/createWave"
            )
                .with_headers(
                **{
                    "Content-Type": "application/json;charset=UTF-8",
                    "bid": "1528936961052135425",
                    "businesscode": "RG20",
                    "businessname": "%E5%8D%8E%E5%8D%97%E6%80%BB%E4%BB%93",
                    "token": "${ENV(token)}",
                    "trace.id": "1301b31d-2c2f-29e8-863b-a84d4017d592",
                }
            )
                .with_json(
                {
                    "orderIds": "${convert_dict($order_id)}",
                    "policyId": "64440030780784642",
                    "waveCount": 10,
                }
            )
                .extract()
                .with_jmespath("body.data.waveNo", "waveNo")
                .validate()
                .assert_equal("status_code", 200, "assert response status code")
                .assert_equal("body.msg", "操作成功", "assert response body msg")
        ),
        Step(
            RunSqlRequest("查询计划单状态")
            .fetchone("select * from asura_wms_005.out_plan where id = $id;")
            .extract()
            .with_jmespath("plan_status", "plan_status")
            .validate()
            .assert_equal("plan_status", 3)
        ),
        Step(
            RunSqlRequest("查询波次id")
            .fetchone("select * from asura_wms_005.out_wave where wave_no = '$waveNo';")
            .extract()
            .with_jmespath("id", "waveId")
        )
    ]


if __name__ == "__main__":
    TestCaseCreateWaveTest().test_start()
