# NOTE: Generated By HttpRunner v3.1.5
# FROM: testcases\test_zone\list_zone.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseListZone(HttpRunner):

    config = Config("区域测试流程").verify(False)

    teststeps = [
        Step(
            RunRequest("新增区域")
            .post("http://test.asura-wms.ruigushop.com/api/asura/wms/web/bas/zone/save")
            .with_headers(**{"token": "${ENV(token)}"})
            .with_json(
                {"whesName": "chengduc", "zoneCode": "chengducang", "zoneName": "成都"}
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("获取列表")
            .post(
                "http://test.asura-wms.ruigushop.com/api/asura/wms/web/bas/zone/listPage"
            )
            .with_headers(**{"token": "${ENV(token)}"})
            .with_json(
                {
                    "current": 1,
                    "paramsList": [],
                    "queryCode": "wms_bas_zone_list",
                    "size": 50,
                }
            )
            .extract()
            .with_jmespath("body.data.records[1].id", "id")
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("修改区域")
            .post(
                "http://test.asura-wms.ruigushop.com/api/asura/wms/web/bas/zone/update"
            )
            .with_headers(**{"token": "${ENV(token)}"})
            .with_json(
                {
                    "id": "$id",
                    "remark": "",
                    "whesName": "chengduc",
                    "zoneCode": "chengducang",
                    "zoneName": "成都1",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("删除区域")
            .post(
                "http://test.asura-wms.ruigushop.com/api/asura/wms/web/bas/zone/removeByIds"
            )
            .with_headers(**{"token": "${ENV(token)}"})
            .with_json({"ids": ["$id"]})
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseListZone().test_start()
